"colorscheme badwolf		" awesome colorscheme
syntax on			" turn on syntax processing
set tabstop=4			" number of visual spaces per TAB
set softtabstop=4		" number of spaces in tab when editing
set expandtab			" tabs are spaces
set number			" show line numbers
set showcmd			" show command in bottom bar
set cursorline			" highlight current line
filetype indent on		" load filetype-specific indent files
"set wildmenu			" visual autocomplete for command menu
set lazyredraw			" redraw only when we need to
set showmatch			" highlight matching [{()}]
set incsearch			" search as characters are entered
set hlsearch			" highlight matches
" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>
set foldenable			" enable folding
set foldlevelstart=10		" open most folds by default
set foldnestmax=10		" 10 nested fold max
" space open/closes folds
nnoremap <space> za
set foldmethod=indent		" fold based on indent level (also could be marker, manual, expr, syntax, or diff)
" move vertically by visual line
nnoremap j gj
nnoremap k gk
" move to beginning/end of line
nnoremap B ^
nnoremap E $
" $/^ doesn't do anything
"nnoremap $ <nop>
"nnoremap ^ <nop>
" highlight last inserted text
nnoremap gV `[v`]
"let mapleader=","       " leader is comma
" jk is escape
inoremap jk <esc>
" toggle gundo
nnoremap <leader>u :GundoToggle<CR>
" edit vimrc/zshrc and load vimrc bindings
nnoremap <leader>ev :vsp $MYVIMRC<CR>
nnoremap <leader>ez :vsp ~/.zshrc<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>
" save session
nnoremap <leader>s :mksession<CR>
" open ag.vim
nnoremap <leader>a :Ag
" CtrlP settings
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
call pathogen#infect()                      " use pathogen
call pathogen#runtime_append_all_bundles()  " use pathogen
